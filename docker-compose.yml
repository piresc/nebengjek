services:
  # Users Service
  users-service:
    image: ${DOCKER_USERNAME:-piresc16}/nebengjek-users:${VERSION:-latest}
    container_name: nebengjek-users-service
    ports:
      - "9990:9990"
    env_file:
      - ./cmd/users/.env
    volumes:
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_started
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9990/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Location Service
  location-service:
    image: ${DOCKER_USERNAME:-piresc16}/nebengjek-location:${VERSION:-latest}
    container_name: nebengjek-location-service
    ports:
      - "9994:9994"
    env_file:
      - ./cmd/location/.env
    volumes:
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_started
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9994/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Match Service
  match-service:
    image: ${DOCKER_USERNAME:-piresc16}/nebengjek-match:${VERSION:-latest}
    container_name: nebengjek-match-service
    ports:
      - "9993:9993"
    env_file:
      - ./cmd/match/.env
    volumes:
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_started
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9993/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Rides Service
  rides-service:
    image: ${DOCKER_USERNAME:-piresc16}/nebengjek-rides:${VERSION:-latest}
    container_name: nebengjek-rides-service
    ports:
      - "9992:9992"
    env_file:
      - ./cmd/rides/.env
    volumes:
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_started
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9992/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # PostgreSQL - Main Database
  postgres:
    image: postgres:14-alpine
    container_name: nebengjek-postgres
    command: postgres -c 'max_connections=500'
    ports:
      - "5432:5432"
    environment:
     POSTGRES_DB: nebengjek
     POSTGRES_USER: nebengjek-username
     POSTGRES_PASSWORD: nebengjek-password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/migrations:/docker-entrypoint-initdb.d
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nebengjek-username -d nebengjek"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis - For caching and geo-spatial indexing
  redis:
    image: redis:7.0-alpine
    container_name: nebengjek-redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--requirepass", "redispassword"]
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redispassword
      - REDIS_DB=0
      - REDIS_POOL_SIZE=10
    volumes:
      - redis_data:/data
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redispassword", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # NATS message broker
  nats:
    image: nats:latest
    container_name: nebengjek-nats
    ports:
      - "4222:4222"
      - "8222:8222"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8222/healthz"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend

volumes:
  postgres_data:
  redis_data:
  nats_data:

networks:
  backend:
    driver: bridge